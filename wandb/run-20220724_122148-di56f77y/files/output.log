INFO: Starting training:
        Epochs:          5
        Batch size:      2
        Learning rate:   2e-05
        Training size:   9001
        Validation size: 1000
        Checkpoints:     True
        Device:          cuda
        Images scaling:  1.0
        Mixed Precision: False
Epoch 1/5:   0%|                                      | 0/9001 [00:00<?, ?img/s]/root/miniconda3/envs/acnet/lib/python3.8/site-packages/torch/nn/functional.py:1960: UserWarning: nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.
  warnings.warn("nn.functional.sigmoid is deprecated. Use torch.sigmoid instead.")
/root/autodl-tmp/acnet/train.py:134: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  true_masks = true_masks // 255.0

Epoch 1/5:   1%|        | 110/9001 [00:08<11:55, 12.42img/s, loss (batch)=0.553]
INFO: Saved interrupt
Traceback (most recent call last):
  File "/root/autodl-tmp/acnet/train.py", line 232, in <module>
    train_net(net=net,
  File "/root/autodl-tmp/acnet/train.py", line 133, in train_net
    masks_pred = torch.sigmoid(net(images))
  File "/root/miniconda3/envs/acnet/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/root/autodl-tmp/acnet/model.py", line 251, in forward
    result = self.decoder(x1, x2, x3, x4, att)
  File "/root/miniconda3/envs/acnet/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/root/autodl-tmp/acnet/model.py", line 231, in forward
    adm4_out = self.adm4(res4, afm)
  File "/root/miniconda3/envs/acnet/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/root/autodl-tmp/acnet/model.py", line 214, in forward
    out = self.DoubleConv(up_out)
  File "/root/miniconda3/envs/acnet/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/root/autodl-tmp/acnet/model.py", line 24, in forward
    return self.double_conv(x)
  File "/root/miniconda3/envs/acnet/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/root/miniconda3/envs/acnet/lib/python3.8/site-packages/torch/nn/modules/container.py", line 139, in forward
    input = module(input)
  File "/root/miniconda3/envs/acnet/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/root/miniconda3/envs/acnet/lib/python3.8/site-packages/torch/nn/modules/batchnorm.py", line 148, in forward
    self.num_batches_tracked.add_(1)  # type: ignore[has-type]
KeyboardInterrupt